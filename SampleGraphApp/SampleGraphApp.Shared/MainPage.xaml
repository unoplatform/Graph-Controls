<Page
    x:Class="SampleGraphApp.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SampleGraphApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wgt="using:Microsoft.Toolkit.Graph.Controls"
    xmlns:graph="using:Microsoft.Graph"
    xmlns:glob="using:System.Globalization"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:providers="using:Microsoft.Toolkit.Graph.Providers"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:ex="using:Microsoft.Toolkit.Extensions"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    xmlns:controlsKeepThis="using:Microsoft.Toolkit.Uwp.UI.Controls"><!-- Workaround for https://github.com/microsoft/microsoft-ui-xaml/issues/1286 -->
    <!-- 
        Initialize Graph Provider On Page Load 
    
        Register Client Id: https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app
        
        After finishing the initial registration page, you will also need to add an additional redirect URI. 
        Click on "Add a Redirect URI" and check the https://login.microsoftonline.com/common/oauth2/nativeclient checkbox on that page. Then click "Save".
    -->
    <Interactivity:Interaction.Behaviors>
        <!--<providers:InteractiveProviderBehavior ClientId="YOUR_CLIENT_ID_HERE" Scopes="User.Read,User.ReadBasic.All,People.Read,Calendars.Read,Mail.Read,Group.Read.All,ChannelMessage.Read.All"/>-->
        <providers:MockProviderBehavior/>
    </Interactivity:Interaction.Behaviors>

    <Pivot>
        <Pivot.ItemContainerStyle>
            <Style TargetType="PivotItem">
                <Setter Property="Margin" Value="8,8,8,0"/>
            </Style>
        </Pivot.ItemContainerStyle>
        <PivotItem Header="LoginButton">
            <StackPanel>
                <wgt:LoginButton VerticalAlignment="Top" HorizontalAlignment="Left"/>
                <TextBlock TextWrapping="WrapWholeWords">
                    The `LoginButton` above allows your user and application to easily connect to the Microsoft Graph. They can then also easily logout from the drop-down menu.
                </TextBlock>
            </StackPanel>
        </PivotItem>
        <PivotItem Header="PeoplePicker">
            <StackPanel>
                <TextBlock TextWrapping="WrapWholeWords" Margin="0,0,0,16">
                    The `PeoplePicker` lets a logged in user easily search for familiar people they interact with or contacts. Great for emails or messages.
                </TextBlock>
                <wgt:PeoplePicker x:Name="PeopleChooser"/>
                <TextBlock Margin="0,8,0,0" FontWeight="Bold">Picked People:</TextBlock>
                <ItemsControl ItemsSource="{x:Bind PeopleChooser.ItemsSource}"
                              Margin="8,0,0,0">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayName}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </PivotItem>
        <PivotItem Header="GraphPresenter">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock TextWrapping="WrapWholeWords">
                    The `GraphPresenter` is a unique control in the library which makes it easier for a developer to make any graph call and configure a nice display template in XAML. This opens up a world of possibilities for many uses outside of any other control available within this library. You can see a few examples of what's possible below.
                </TextBlock>
                <Pivot Grid.Row="1">
                    <Pivot.ItemContainerStyle>
                        <Style TargetType="PivotItem">
                            <Setter Property="Margin" Value="8,8,8,0"/>
                        </Style>
                    </Pivot.ItemContainerStyle>
                    <PivotItem Header="CalendarView">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel>
                                <TextBlock>The following example shows the `Me.CalendarView` API.</TextBlock>
                                <TextBlock Margin="0,8,0,0" FontWeight="Bold">My Upcoming Calendar Events:</TextBlock>
                            </StackPanel>
                            <wgt:GraphPresenter Grid.Row="1"
                                    RequestBuilder="{x:Bind Graph.Me.CalendarView, Mode=OneWay}"
                                    OrderBy="start/dateTime"
                                    ResponseType="graph:Event"
                                    IsCollection="True">
                                <wgt:GraphPresenter.QueryOptions>
                                    <!-- Need to create separate Properties as multiple functions not supported in x:Bind see https://github.com/microsoft/microsoft-ui-xaml/issues/2407 -->
                                    <wgt:QueryOption Name="startDateTime" Value="{x:Bind Today.ToString('o', glob:CultureInfo.InvariantCulture)}"/>
                                    <wgt:QueryOption Name="endDateTime" Value="{x:Bind ThreeDaysFromNow.ToString('o', glob:CultureInfo.InvariantCulture)}"/>
                                </wgt:GraphPresenter.QueryOptions>
                                <wgt:GraphPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <!-- Return result is a collection of Event's as we used 'IsCollection', so bind that first. -->
                                        <ScrollViewer HorizontalScrollMode="Disabled" VerticalScrollBarVisibility="Auto">
                                            <ItemsControl ItemsSource="{Binding}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate x:DataType="graph:Event">
                                                        <StackPanel>
                                                            <TextBlock Text="{Binding Subject}" Style="{StaticResource TitleTextBlockStyle}"/>
                                                            <TextBlock FontWeight="Bold">
                                                    <Run Text="{x:Bind local:MainPage.ToLocalTime(Start), Mode=OneWay}"/>
                                                    <Run> - </Run>
                                                    <Run Text="{x:Bind local:MainPage.ToLocalTime(End), Mode=OneWay}"/>
                                                            </TextBlock>
                                                            <TextBlock>
                                                    <Run FontFamily="Segoe MDL2 Assets" Text="&#xE707;"/>
                                                    <Run> </Run>
                                                    <Run Text="{x:Bind Location.DisplayName, Mode=OneWay}"/>
                                                            </TextBlock>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemContainerStyle>
                                                    <Style TargetType="ContentPresenter">
                                                        <Setter Property="Margin" Value="0,8,0,8"/>
                                                    </Style>
                                                </ItemsControl.ItemContainerStyle>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </DataTemplate>
                                </wgt:GraphPresenter.ContentTemplate>
                            </wgt:GraphPresenter>
                        </Grid>
                    </PivotItem>
                    <PivotItem Header="(Mail) Messages">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel>
                                <TextBlock>The following example shows the `Me.Messages` API for getting a user's inbox mail messages.</TextBlock>
                                <TextBlock Margin="0,8,0,0" FontWeight="Bold">My Messages:</TextBlock>
                            </StackPanel>
                            <wgt:GraphPresenter Grid.Row="1"
                                    RequestBuilder="{x:Bind Graph.Me.Messages, Mode=OneWay}"
                                    ResponseType="graph:Message"
                                    IsCollection="True">
                                <wgt:GraphPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <ScrollViewer HorizontalScrollMode="Disabled" VerticalScrollBarVisibility="Auto">
                                            <ItemsControl ItemsSource="{Binding}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate x:DataType="graph:Message">
                                                        <StackPanel>
                                                            <wgt:PersonView PersonQuery="{x:Bind Sender.EmailAddress.Address}" ShowName="True" Margin="-4"/>
                                                            <TextBlock Text="{x:Bind Subject}" Style="{StaticResource BaseTextBlockStyle}" Padding="0"/>
                                                            <TextBlock Text="{x:Bind local:MainPage.RemoveWhitespace(BodyPreview)}" TextWrapping="WrapWholeWords"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemContainerStyle>
                                                    <Style TargetType="ContentPresenter">
                                                        <Setter Property="Margin" Value="0,8,0,8"/>
                                                    </Style>
                                                </ItemsControl.ItemContainerStyle>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </DataTemplate>
                                </wgt:GraphPresenter.ContentTemplate>
                            </wgt:GraphPresenter>
                        </Grid>
                    </PivotItem>
                    <PivotItem Header="Tasks">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel>
                                <TextBlock>The following example shows the `Me.Planner.Tasks` API for getting a user's tasks.</TextBlock>
                                <TextBlock Margin="0,8,0,0" FontWeight="Bold">My Tasks:</TextBlock>
                            </StackPanel>
                            <wgt:GraphPresenter Grid.Row="1"
                                    RequestBuilder="{x:Bind Graph.Me.Planner.Tasks, Mode=OneWay}"
                                    ResponseType="graph:PlannerTask"
                                    IsCollection="True">
                                <wgt:GraphPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <ScrollViewer HorizontalScrollMode="Disabled" VerticalScrollBarVisibility="Auto">
                                            <ItemsControl ItemsSource="{Binding}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate x:DataType="graph:PlannerTask">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <!-- We've disabled the checkbox as we're not going to make the call back to the graph to modify the item. -->
                                                            <CheckBox IsEnabled="False" IsChecked="{x:Bind local:MainPage.IsTaskCompleted(PercentComplete), Mode=OneWay}"/>
                                                            <TextBlock Text="{x:Bind Title, Mode=OneWay}" Grid.Column="1"/>
                                                            <ItemsControl ItemsSource="{x:Bind Assignments, Mode=OneWay}" Grid.Column="1" Grid.Row="1">
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <!-- We're getting a KVP from the PlannerAssignments type, the Key is the UserId string, we'll use that to look-up our user info. -->
                                                                        <wgt:PersonView UserId="{Binding Key}" Margin="-4"/>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <StackPanel Orientation="Horizontal"/>
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                            </ItemsControl>
                                                            <TextBlock FontWeight="Bold" Grid.Column="2" Grid.Row="2">
                                                                    <Run>Due </Run>
                                                                    <Run Text="{x:Bind local:MainPage.ToLocalTime(DueDateTime), Mode=OneWay}" />
                                                            </TextBlock>

                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemContainerStyle>
                                                    <Style TargetType="ContentPresenter">
                                                        <Setter Property="Margin" Value="0,8,0,8"/>
                                                    </Style>
                                                </ItemsControl.ItemContainerStyle>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </DataTemplate>
                                </wgt:GraphPresenter.ContentTemplate>
                            </wgt:GraphPresenter>
                        </Grid>
                    </PivotItem>
                    <PivotItem Header="Teams Messages">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel>
                                <TextBlock>The following example shows the beta `Teams/id/Channels/id/messages` API for getting a list of messages (without replies) from a Channel in Teams.</TextBlock>
                                <TextBlock Margin="0,8,0,0" FontWeight="Bold">My Chat Messages:</TextBlock>
                            </StackPanel>
                            <wgt:GraphPresenter Grid.Row="1"
                                    RequestBuilder="{x:Bind local:MainPage.GetTeamsChannelMessagesBuilder('02bd9fd6-8f93-4758-87c3-1fb73740a315', '19:d0bba23c2fc8413991125a43a54cc30e@thread.skype'), Mode=OneWay}"
                                    ResponseType="graph:ChatMessage"
                                    IsCollection="True">
                                <wgt:GraphPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <ScrollViewer HorizontalScrollMode="Disabled" VerticalScrollBarVisibility="Auto">
                                            <ItemsControl ItemsSource="{Binding}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate x:DataType="graph:ChatMessage">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <wgt:PersonView UserId="{x:Bind From.User.Id, Mode=OneWay}" Margin="-4,-4,8,-4"/>
                                                            <TextBlock Text="{x:Bind ex:StringExtensions.DecodeHtml(Body.Content), Mode=OneWay}" TextWrapping="WrapWholeWords" Grid.Column="1"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemContainerStyle>
                                                    <Style TargetType="ContentPresenter">
                                                        <Setter Property="Margin" Value="0,8,0,8"/>
                                                    </Style>
                                                </ItemsControl.ItemContainerStyle>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </DataTemplate>
                                </wgt:GraphPresenter.ContentTemplate>
                            </wgt:GraphPresenter>
                        </Grid>
                    </PivotItem>
                </Pivot>
            </Grid>
        </PivotItem>
    </Pivot>
</Page>
